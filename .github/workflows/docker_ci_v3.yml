name: 构建并发布Docker镜像V3

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "README.md"
      - "docs/**"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: 登录到GitHub容器注册表
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER }}

      - name: 提取Docker元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/pansou
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 安装 Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # 与 Dockerfile 保持一致

      - name: 编译项目到 dist 目录
        run: |
          mkdir -p dist
          go build -o dist/pansou .

      - name: 上传 dist 目录
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: dist/

      - name: 构建并推送Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}

      # --- 新增：打包并发布到 Release ---
      - name: 打包编译文件带日期
        run: |
          cd dist
          ZIP_NAME="pansou_$(date +%Y%m%d).zip"
          zip "$ZIP_NAME" pansou
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: 发布到 GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name != 'pull_request'
        with:
          tag_name: "release-$(date +%Y%m%d)"
          name: "Release $(date +%Y%m%d)"
          body: "自动发布：包含当天编译的 pansou 文件"
          files: dist/${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
